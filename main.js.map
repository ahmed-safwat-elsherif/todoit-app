{"version":3,"sources":["./src/app/dialog-todo-group/dialog-todo-group.component.ts","./src/app/dialog-todo-group/dialog-todo-group.component.html","./src/environments/environment.ts","./src/app/todo/todo.component.ts","./src/app/todo/todo.component.html","./src/app/services/auth-guard.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/todo-table/todo-table.component.ts","./src/app/todo-table/todo-table.component.html","./src/app/app.module.ts","./src/app/dialog-add-todo/dialog-add-todo.component.ts","./src/app/dialog-add-todo/dialog-add-todo.component.html","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/app/dialog-edit-todo/dialog-edit-todo.component.ts","./src/app/dialog-edit-todo/dialog-edit-todo.component.html","./src/app/services/auth.service.ts","./src/app/group-table/group-table.component.ts","./src/app/group-table/group-table.component.html","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/default/default.component.ts","./src/app/default/default.component.html","./src/app/services/user.service.ts","./src/app/services/todo.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/todo-group/todo-group.component.ts","./src/app/todo-group/todo-group.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/services/todo-group.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Output, EventEmitter, Inject, OnInit} from '@angular/core';\nimport { MatDialog, MatDialogRef,MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { TodoGroupService } from '../services/todo-group.service';\nimport { TodoService } from '../services/todo.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-dialog-todo-group',\n  templateUrl: './dialog-todo-group.component.html',\n  styleUrls: ['./dialog-todo-group.component.css']\n})\nexport class DialogTodoGroupComponent implements OnInit {\n  @Output() todoCreated = new EventEmitter();\n  title = \"untitled\";\n  body = \"\";\n  type = \"1\";\n  tags: Array<any> = [\n    { name: 'Lemon' },\n    { name: 'Lime' },\n    { name: 'Apple' },\n  ];\n  isType = false;\n  isTitle = false;\n  isTitleLong = false;\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  constructor(\n    public dialogRef: MatDialogRef<DialogTodoGroupComponent>,\n    private todoService: TodoService,\n    private todoGroupService: TodoGroupService,\n    private route:ActivatedRoute,\n    private router:Router,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit(): void {\n  }\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.tags.push({ name: value.trim() });\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n  remove(tag): void {\n    const index = this.tags.indexOf(tag);\n\n    if (index >= 0) {\n      this.tags.splice(index, 1);\n    }\n  }\n  addTodo() {\n    console.log(this.tags);\n    console.log(this.title);\n    console.log(this.body);\n    console.log(this.type);\n    console.log(this.title.length)\n    this.isTitle=false;\n    this.isType = false;\n    this.isTitleLong=false;\n    if (this.title.length == 0) {\n      this.isTitle = true;\n      return;\n    }\n    if (this.title.length > 20) {\n      this.isTitleLong = true;\n      return;\n    }\n    let currentUrl;\n    if (this.type == \"1\") {\n      this.todoGroupService.postNewTodoGroup({\n        tags: this.tags,\n        body: this.body,\n        title: this.title\n      }).subscribe(\n        (res: any) => {\n          console.log(res)\n          this.todoCreated.emit({group:true, solo:false,res})\n        },\n        (err) => {\n          console.log(err)\n        }\n        )\n      currentUrl = '/dashboard';\n      this.dialogRef.close();\n    } else {\n      this.todoService.postNewTodo({\n        tags: this.tags,\n        body: this.body,\n        title: this.title\n      }).subscribe(\n        (res: any) => {\n          console.log(res)\n        },\n        (err) => {\n          console.log(err)\n        }\n        )\n      currentUrl = '/dashboard';\n      this.dialogRef.close();\n    }\n    console.log(this.router.url)\n    console.log(currentUrl)\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\n        this.router.navigate([currentUrl]);\n    });\n  }\n  close() {\n    this.dialogRef.close();\n    this.title = \"untitled\";\n    this.body = \"\";\n    this.type = \"1\"\n    this.tags = [\n      { name: 'Lemon' },\n      { name: 'Lime' },\n      { name: 'Apple' },\n    ];\n    this.isType = false;\n    this.isTitle = false;\n    this.isTitleLong = false;\n  }\n}\n","<mat-dialog-content class=\"mat-typography\">\n    <h1>Add a todo/group</h1>\n    <br>\n    <br>\n    <div class=\"errors text-danger\">\n        <span class=\"type d-block\" *ngIf=\"isType\">Choose a type</span>\n        <span class=\"title d-block\" *ngIf=\"isTitle\">Choose a title</span>\n        <span class=\"title d-block\" *ngIf=\"isTitleLong\">Title must be maximum 20 character</span>\n    </div>\n    <mat-radio-group aria-label=\"Select an option\" [(ngModel)]=\"type\">\n        <mat-radio-button default value=\"1\">Group</mat-radio-button>\n        <mat-radio-button value=\"2\">Todo(solo)</mat-radio-button>\n      </mat-radio-group>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label></mat-label>\n        <input matInput placeholder=\"Enter group title\" [(ngModel)]=\"title\">\n        <button mat-button *ngIf=\"title\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"title=''\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Message</mat-label>\n        <input matInput #message maxlength=\"256\" [(ngModel)]=\"body\" placeholder=\"Ex. I need help with...\">\n        <!-- <mat-hint align=\"start\"><strong>Don't disclose personal info</strong> </mat-hint> -->\n        <mat-hint align=\"end\">{{message.value.length}} / 500</mat-hint>\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"example-chip-list\">\n        <mat-label>Tags</mat-label>\n        <mat-chip-list #chipList aria-label=\"Tags selection\">\n            <mat-chip *ngFor=\"let tag of tags\" [selectable]=\"selectable\" [removable]=\"removable\"\n                (removed)=\"remove(tag)\">\n                {{tag.name}}\n                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n            </mat-chip>\n            <input placeholder=\"New tag ..\" [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\"\n                (matChipInputTokenEnd)=\"add($event)\">\n        </mat-chip-list>\n    </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions align=\"center\">\n    <div class=\"buttons justify-content-center align-items-center\">\n        <button mat-raised-button color=\"primary\" (click)=\"addTodo()\">Add</button>\n        <button mat-raised-button (click)=\"close()\">Cancel</button>\n    </div>\n</mat-dialog-actions>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, DoCheck, OnChanges, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport { TodoService } from '../services/todo.service';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\nexport class TodoComponent implements OnInit, DoCheck {\n  isLoading=true;\n  isError=false;\n  _id = this.route.snapshot.paramMap.get(\"_id\") || \"\";\n  token = localStorage.getItem('todoitUserToken') || \"\";\n  todo={\n    title:\"\",\n    body:\"\",\n    tags:[]\n  };\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private todoService: TodoService,\n  ) {\n    this.getTodo()\n   }\n\n  ngOnInit(): void {\n  }\n  ngDoCheck(){\n    if(this._id == this.route.snapshot.paramMap.get('_id')){\n      return;\n    }\n    this._id = this.route.snapshot.paramMap.get('_id') || \"\";\n    this.getTodo()\n  }\n  getTodo(){\n    this.isLoading = true;\n    this.isError=false;\n\n    this.todoService.getTodoByID(this._id).subscribe(\n      (res:any)=>{\n        console.log(res)\n        this.todo = res.todo;\n\n        console.log(this.todo)\n        this.isLoading = false;\n        if(!this.todo){\n          this.isError=true\n        }\n      },\n      err=>{\n        console.log(err)\n        this.isError=true;\n        this.isLoading = false;\n      }\n    )\n  }\n  drop(event: CdkDragDrop<[]>) {\n    moveItemInArray(this.todo.tags, event.previousIndex, event.currentIndex);\n  }\n\n}\n","<div>\r\n    <a mat-stroked-button [routerLink]=\"['/dashboard/default']\">Back</a>\r\n </div>\r\n <hr>\r\n<div *ngIf=\"!isLoading && !isError\">\r\n    <p><b>Title:</b></p>\r\n    <h2>{{todo.title}}</h2>\r\n    <hr>\r\n    <p><b>Body:</b></p>\r\n    <p>{{todo.body}}</p>\r\n    <hr>\r\n    <span class=\"d-block\"><b>Tags:</b></span><br>\r\n    <div class=\"tags\">\r\n        <mat-chip-list class=\"example-chip\" cdkDropList cdkDropListOrientation=\"horizontal\"\r\n            (cdkDropListDropped)=\"drop($event)\">\r\n            <mat-chip class=\"example-box\" cdkDrag *ngFor=\"let tag of todo.tags\">\r\n                {{tag.name}}\r\n            </mat-chip>\r\n        </mat-chip-list>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf=\"isLoading && !isError\" class=\"d-flex justify-content-center align-items-center\">\r\n    <div class=\"spinner-border\" style=\"width: 3rem; height: 3rem;\" role=\"status\">\r\n        <span class=\"sr-only\">Loading...</span>\r\n    </div>\r\n</div>\r\n<div *ngIf=\"!isLoading && isError\">\r\n    <div class=\"text-center\">\r\n        <img src=\"../../assets/images/not-found.jpg\" alt=\"\" class=\"img-fluid\">\r\n        <h2>\r\n            Unable to get todo group :'(\r\n        </h2>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport { Router, CanActivate,ActivatedRouteSnapshot,RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport {UserService} from './user.service';\n@Injectable({providedIn: \"root\"})\nexport class AuthGuardService implements CanActivate {\n  constructor(public auth: AuthService, public router: Router) {}\n  canActivate(): boolean {\n    if (!this.auth.isAuthenticated()) {\n      console.log(\"FSDFASDF ADSFD AFASFSDAF\")\n      this.router.navigate(['login']);\n      return false;\n    }\n    return true;\n  }\n}","import { Component, OnDestroy, OnInit,Output } from '@angular/core';\nimport { TodoGroupService } from '../services/todo-group.service';\nimport {TodoService} from '../services/todo.service';\nimport {UserService} from '../services/user.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport {DialogTodoGroupComponent} from '../dialog-todo-group/dialog-todo-group.component'\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit,OnDestroy {\n  user={\n    fullname:\"Ahmed Safwat\",\n    email:\"alsherif333@gmail.com\",\n  }\n\n  public groups=[];\n  solos=[];\n  \n  constructor(\n    private todoService:TodoService,\n    private todoGroupService:TodoGroupService,\n    private userService:UserService,\n    private dialog: MatDialog,\n    private router:Router,\n    private route: ActivatedRoute,\n  ) { }\n  solosLimit=30;\n  solosSkip=0;\n  groupsLimit=30;\n  groupsSkip=0;\n  sideBarIsGroupLoading = true;\n  sideBarIsGroupError = false;\n\n  sideBarIsSoloLoading = true;\n  sideBarIsSoloError = false;\n  \n  dashboardIsLoading= true;\n  subscriberTodoGroups;\n  subscriberTodos;\n  ngOnInit(): void {\n    /// Fetch all solo todos\n    this.userService.getProfile(localStorage.getItem('todoitUserToken')).subscribe(\n      (res:any)=>{\n        this.user.fullname = `${res.user.firstName} ${res.user.lastName}`; \n        this.user.email = `${res.user.email}`; \n      },\n      err=>{\n        console.log(err)\n      }\n    )\n    this.subscriberTodoGroups = this.todoService.getTodos(this.solosLimit,this.solosSkip)\n    this.subscriberTodoGroups.subscribe(\n      (res:any)=>{\n        this.solos = res.todos;\n        this.sideBarIsGroupLoading = false;\n        this.sideBarIsGroupError = false;\n        \n        this.dashboardIsLoading= false;\n      },\n      err=>{\n        this.sideBarIsGroupLoading = false;\n        this.sideBarIsGroupError = true;\n        this.dashboardIsLoading= false;\n        console.log(err)\n      }\n    )\n    \n    // Fetch all group todos\n    this.subscriberTodos = this.todoGroupService.getTodoGroups(this.groupsLimit,this.groupsSkip)\n    this.subscriberTodos.subscribe(\n      (res:any)=>{\n        this.groups = res.todoGroups;\n        this.sideBarIsSoloLoading = false;\n        this.dashboardIsLoading= false;\n        this.sideBarIsSoloError = false;\n      },\n      err=>{\n        console.log(err)\n        this.sideBarIsSoloLoading = false;\n        this.sideBarIsSoloError = true;\n        this.dashboardIsLoading= false;\n      }\n    )\n  }\n  signout(){\n    localStorage.setItem('todoitUserToken','empty');\n    this.router.navigate(['login']);\n  }\n  onTodoCreated(e){\n    console.log(e)\n  }\n  openDialogTodo(){\n    const dialogRef = this.dialog.open(DialogTodoGroupComponent);\n\n    // dialogRef.afterClosed().subscribe(result => {\n    //   console.log(`Dialog result: ${result}`);\n    // });\n  }\n  ngOnDestroy(){\n  }\n  toGroupTable(){\n    this.router.navigate([`dashboard/table-groups`]);\n  }\n  toTodoTable(){\n    this.router.navigate(['dashboard/table-todo'])\n  }\n\n}\n","<mat-card class=\"dashboard-card\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Dashboard</mat-card-title>\n    <mat-card-subtitle>Welcome, {{user.fullname.split(\" \")[0]}}</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <div class=\"container position-relative\">\n      <button style=\"position: absolute; z-index: 3; top: 0px; right:20px\" (click)=\"signout()\" mat-raised-button>logout</button>\n    </div>\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-3 side-bar p-2\">\n          <p class=\"pt-1\">\n            <span matBadge=\"{{groups.length}}\" (click)=\"toGroupTable()\" matBadgeOverlap=\"false\">\n              <span class=\"clickable\" style=\"font-size: 1.1rem;\">\n              Groups\n            </span>\n          </span>\n          </p>\n          <div *ngIf=\"!sideBarIsGroupLoading && !sideBarIsGroupError\">\n            <ul class=\"todo-groups\">\n              <li class=\"todo-group-card p-2 mb-2 rounded-pill\" *ngFor=\"let todoGroup of groups\">\n                <a [routerLink]=\"['/dashboard/todo-group/',todoGroup._id]\">{{todoGroup.title}}</a>\n                <!-- <span class=\"delete\">&#10005;</span> -->\n              </li>\n            </ul>\n          </div>\n          <div *ngIf=\"sideBarIsGroupLoading && !sideBarIsGroupError\" class=\"d-flex justify-content-center align-items-center\">\n            <div class=\"spinner-grow text-light\" role=\"status\">\n              <span class=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n          <div class=\"errors\" *ngIf=\"sideBarIsGroupError\">\n            <h3>Unable to get groups</h3>\n          </div>\n          <hr>\n          <p class=\"pt-1\">\n            <span matBadge=\"{{solos.length}}\" matBadgeOverlap=\"false\" (click)=\"toTodoTable()\">\n              <span class=\"clickable\" style=\"font-size: 1.1rem;\">\n                Solos\n              </span>\n            </span>\n          </p>\n          <div *ngIf=\"!sideBarIsSoloLoading && !sideBarIsSoloError\">\n            <ul class=\"todos\">\n              <li class=\"todo-card p-2 mb-2 rounded-pill\" *ngFor=\"let todo of solos\">\n                <a [routerLink]=\"['/dashboard/todo/',todo._id]\">{{todo.title}}</a>\n                <!-- <span class=\"delete\">&#10005;</span> -->\n              </li>\n            </ul>\n          </div>\n          <div *ngIf=\"sideBarIsSoloLoading && !sideBarIsSoloError\" class=\"d-flex justify-content-center align-items-center\">\n            <div class=\"spinner-grow text-light\" role=\"status\">\n              <span class=\"sr-only\">Loading...</span>\n            </div>\n          </div>\n          <div class=\"errors\" *ngIf=\"sideBarIsSoloError\">\n            <h3>Unable to get groups</h3>\n          </div>\n        </div>\n        <div class=\"col-md-9\">\n          <div class=\"field p-2\">\n            Dashboard\n            <div *ngIf=\"!dashboardIsLoading\">\n              <router-outlet></router-outlet>\n            </div>\n            <div *ngIf=\"dashboardIsLoading\">\n              <div class=\"d-flex justify-content-center align-items-center\">\n                <div class=\"spinner-border\" role=\"status\">\n                  <span class=\"sr-only\">Loading...</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <br>\n    <br>\n  </mat-card-content>\n  <!-- <mat-card-actions>\n  </mat-card-actions> -->\n  <button (click)=\"openDialogTodo()\" mat-fab class=\"add\" aria-label=\"Example icon button with a home icon\">&#43;\n    <!-- <mat-icon>plus</mat-icon> -->\n  </button>\n</mat-card>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todoit-app';\n  onTodoCreated(e){\n    console.log(e)\n  }\n}\n","<div class=\"app-root\">\n  <h1 class=\"p-2 app-title\">ToDoiT</h1>\n  <div class=\"container-fluid d-flex justify-content-center align-items-center\">\n    <router-outlet (todoCreated)=\"onTodoCreated($event)\"></router-outlet>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>profile works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TodoService } from '../services/todo.service';\nimport {FormGroup, FormControl} from '@angular/forms';\n\n@Component({\n  selector: 'app-todo-table',\n  templateUrl: './todo-table.component.html',\n  styleUrls: ['./todo-table.component.css']\n})\nexport class TodoTableComponent implements OnInit {\n  public todos=[];\n  solos=[];\n  public allTodo=[];\n  \n  constructor(\n    private todoService:TodoService,\n    private router:Router,\n    private route: ActivatedRoute\n  ) { }\n  range = new FormGroup({\n    start: new FormControl('2021-03-15T22:00:00.000Z'),\n    end: new FormControl('2021-03-16T22:00:00.000Z')\n  });\n  todosLimit=30;\n  todosSkip=0;\n  isLoading = true;\n  isError = false;\n  \n  subscriberTodotodos;\n  subscriberTodos;\n  ngOnInit(): void {\n    /// Fetch all solo todos\n    this.isError = false;\n    this.isLoading = true;\n    this.subscriberTodotodos = this.todoService.getTodos(this.todosLimit,this.todosSkip)\n    this.subscriberTodotodos.subscribe(\n      (res:any)=>{\n        // console.log(res)\n        this.isLoading = false;\n        this.isError = false;\n        this.todos = res.todos;\n        this.allTodo = res.todos;\n      },\n      err=>{\n        this.isLoading = false;\n        this.isError = true;\n        console.log(err)\n      }\n    )\n    // Fetch all todo todos\n  }\n  getDate(e){\n    let dStart = new Date(this.range.value.start)\n    let dEnd = new Date(this.range.value.end);\n    if(dEnd.getTime() == 0){\n      this.todos = this.allTodo;\n      return;\n    }\n    let todoGroup = this.allTodo.filter(todo=>{\n      var todoCreateAt = new Date(todo.createdAt); // 10:09 to\n      console.log(todoCreateAt.getTime())\n      console.log(dStart.getTime())\n      console.log(dEnd.getTime())\n      console.log(((todoCreateAt.getTime() >= dStart.getTime()) && (todoCreateAt.getTime() <= dEnd.getTime())))\n\n      return ((todoCreateAt.getTime() >= dStart.getTime()) && (todoCreateAt.getTime() <= dEnd.getTime())); \n    })\n    this.todos = todoGroup;\n  }\n  changeStatus(id){\n    let todo = this.todos.find(todo=>todo?._id==id);\n    console.log(id,todo._id);\n    todo.status = (todo.status == \"in progress\")? \"done\":\"in progress\";\n    let {title, body, tags, _id,status}= todo\n    this.todoService.patchTodo(id,{title, body, tags, _id,status}).subscribe(\n      (res:any)=>{\n        console.log(res);\n      },\n      err=>{\n        console.log(err)\n      }\n    )\n  }\n  toTodoInfo(id){\n    this.router.navigate([`dashboard/todo/${id}`]);\n  }\n  deleteTodo(id){\n    console.log(id)\n    \n    this.todoService.deleteTodo(id).subscribe(\n      (res:any)=>{\n        console.log(res)\n        let newTodo = this.todos.filter(todo=>todo._id!=id);\n        this.todos = newTodo;\n      },\n      (err)=>{\n        console.log(err)\n      }\n    )\n  }\n\n}\n","<h2>todos</h2>\n<div>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Enter a date range</mat-label>\n    <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n      <input matStartDate (dateInput)=\"getDate($event)\" formControlName=\"start\" placeholder=\"Start date\">\n      <input matEndDate (dateInput)=\"getDate($event)\"  formControlName=\"end\" placeholder=\"End date\">\n    </mat-date-range-input>\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    <mat-date-range-picker  #picker></mat-date-range-picker>\n  \n    <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\n    <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\n  </mat-form-field>\n</div>\n<div *ngIf=\"!isLoading && !isError\">\n  <div class=\"table\" *ngIf=\"todos.length > 0\">\n    <table class=\"table table-hover \">\n      <thead>\n        <tr>\n          <th scope=\"col\">No.</th>\n          <th scope=\"col\">Title</th>\n          <th scope=\"col\">status</th>\n          <th scope=\"col\">Options</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let todo of todos; let i = index\" class=\"clickable\">\n          <th scope=\"row\">{{i+1}}</th>\n          <td (click)=\"changeStatus(todo._id)\" class=\"clickable title\" *ngIf=\"todo.status=='in progress'\">{{todo.title}}</td>\n          <td (click)=\"changeStatus(todo._id)\" class=\"clickable title\" *ngIf=\"todo.status=='done'\" class=\"marked\">{{todo.title}}</td>\n          <td *ngIf=\"todo.status=='in progress'\"><mat-icon>cached</mat-icon></td>\n          <td *ngIf=\"todo.status=='done'\"><mat-icon>done</mat-icon></td>\n          <td class=\"d-flex\">\n            <button class=\"mr-1\" mat-mini-fab color=\"primary\" (click)=\"toTodoInfo(todo._id)\" aria-label=\"Example icon button with a filter list icon\">\n              <mat-icon>open_in_new</mat-icon>\n            </button>\n            \n            <button mat-mini-fab color=\"warn\" (click)=\"deleteTodo(todo._id)\" aria-label=\"Example icon button with a filter list icon\">\n              <mat-icon>delete</mat-icon>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <div *ngIf=\"todos.length == 0\">\n    <h2>No todos found</h2>\n  </div>\n</div>\n<div *ngIf=\"isLoading && !isError\" class=\"d-flex justify-content-center align-items-center\">\n  <div class=\"spinner-grow text-light\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div>\n<div class=\"errors\" *ngIf=\"isError\">\n  <h3>Unable to get todos</h3>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { TodoGroupComponent } from './todo-group/todo-group.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { DefaultComponent } from './default/default.component';\nimport { DialogAddTodoComponent } from './dialog-add-todo/dialog-add-todo.component';\nimport { TodoTableComponent } from './todo-table/todo-table.component';\nimport { GroupTableComponent } from './group-table/group-table.component';\nimport { DialogEditTodoComponent } from './dialog-edit-todo/dialog-edit-todo.component';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport { DialogTodoGroupComponent } from './dialog-todo-group/dialog-todo-group.component';\nimport {MatRadioModule} from '@angular/material/radio';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nconst MaterialModules = [\n  MatSliderModule,\n  MatButtonModule,\n  MatIconModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSidenavModule,\n  MatDialogModule,\n  MatChipsModule,\n  MatTableModule,\n  MatBadgeModule,\n  MatRadioModule,\n  MatDatepickerModule\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignUpComponent,\n    LoginComponent,\n    DashboardComponent,\n    TodoGroupComponent,\n    TodoComponent,\n    ProfileComponent,\n    NotFoundComponent,\n    DialogTodoGroupComponent,\n    DefaultComponent,\n    DialogAddTodoComponent,\n    TodoTableComponent,\n    GroupTableComponent,\n    DialogEditTodoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    ...MaterialModules\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Output, EventEmitter, Inject, OnInit} from '@angular/core';\nimport { MatDialog, MatDialogRef,MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { TodoGroupService } from '../services/todo-group.service';\nimport { TodoService } from '../services/todo.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dialog-add-todo',\n  templateUrl: './dialog-add-todo.component.html',\n  styleUrls: ['./dialog-add-todo.component.css']\n})\nexport class DialogAddTodoComponent implements OnInit {\n  title = \"untitled\";\n  body = \"\";\n  tags: Array<any> = [\n    { name: 'Lemon' },\n    { name: 'Lime' },\n    { name: 'Apple' },\n  ];\n  isTitle = false;\n  isTitleLong = false;\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  _id = this.route.snapshot.paramMap.get(\"_id\") || \"\";\n  token = localStorage.getItem('todoitUserToken') || \"\";\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  constructor(\n    public dialogRef: MatDialogRef<DialogAddTodoComponent>,\n    private todoService: TodoService,\n    private todoGroupService: TodoGroupService,\n    private route:ActivatedRoute,\n    private router:Router,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit(): void {\n    this._id = this.data.todoGroupId;\n    console.log(this._id)\n  }\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.tags.push({ name: value.trim() });\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n  remove(tag): void {\n    const index = this.tags.indexOf(tag);\n\n    if (index >= 0) {\n      this.tags.splice(index, 1);\n    }\n  }\n  addTodo() {\n    console.log(this.tags);\n    console.log(this.title);\n    console.log(this.body);\n    console.log(this.title.length)\n    this.isTitle=false;\n    this.isTitleLong=false;\n    if (this.title.length == 0) {\n      this.isTitle = true;\n      return;\n    }\n    if (this.title.length > 20) {\n      this.isTitleLong = true;\n      return;\n    }\n    this.todoGroupService.postNewTodo({\n      todoGroupId:this._id,\n      tags: this.tags,\n      body: this.body,\n      title: this.title\n    }).subscribe(\n      (res: any) => {\n        console.log(res)\n      },\n      (err) => {\n        console.log(err)\n      }\n    )\n    this.dialogRef.close();\n    let currentUrl = `/dashboard/todo-group/${this._id}`;\n    console.log(currentUrl)\n    this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\n        this.router.navigate([currentUrl]);\n    });\n  }\n  close() {\n    this.dialogRef.close();\n    this.title = \"untitled\";\n    this.body = \"\";\n    this.tags = [\n      { name: 'Lemon' },\n      { name: 'Lime' },\n      { name: 'Apple' },\n    ];\n    this.isTitle = false;\n    this.isTitleLong = false;\n  }\n}\n","<mat-dialog-content class=\"mat-typography\">\n    <h1>Add a todo to group</h1>\n    <br>\n    <br>\n    <div class=\"errors text-danger\">\n        <span class=\"title d-block\" *ngIf=\"isTitle\">Choose a title</span>\n        <span class=\"title d-block\" *ngIf=\"isTitleLong\">Title must be maximum 20 character</span>\n    </div>\n\n    <mat-form-field class=\"example-full-width\">\n        <mat-label></mat-label>\n        <input matInput placeholder=\"Enter group title\" [(ngModel)]=\"title\">\n        <button mat-button *ngIf=\"title\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"title=''\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Message</mat-label>\n        <input matInput #message maxlength=\"256\" [(ngModel)]=\"body\" placeholder=\"Ex. I need help with...\">\n        <!-- <mat-hint align=\"start\"><strong>Don't disclose personal info</strong> </mat-hint> -->\n        <mat-hint align=\"end\">{{message.value.length}} / 500</mat-hint>\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"example-chip-list\">\n        <mat-label>Tags</mat-label>\n        <mat-chip-list #chipList aria-label=\"Tags selection\">\n            <mat-chip *ngFor=\"let tag of tags\" [selectable]=\"selectable\" [removable]=\"removable\"\n                (removed)=\"remove(tag)\">\n                {{tag.name}}\n                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n            </mat-chip>\n            <input placeholder=\"New tag ..\" [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\"\n                (matChipInputTokenEnd)=\"add($event)\">\n        </mat-chip-list>\n    </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions align=\"center\">\n    <div class=\"buttons justify-content-center align-items-center\">\n        <button mat-raised-button color=\"primary\" (click)=\"addTodo()\">Add</button>\n        <button mat-raised-button (click)=\"close()\">Cancel</button>\n    </div>\n</mat-dialog-actions>","import { Component, OnInit,OnChanges, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport {FormControl,FormGroup, Validators,FormBuilder, AbstractControl,ValidatorFn} from '@angular/forms';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport {UserService} from '../services/user.service';\n/** Error when invalid control is dirty, touched, or submitted. */\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit,OnChanges,AfterViewInit {\n  @ViewChild('aa') span:ElementRef;\n  @ViewChild('email') emailDom:ElementRef;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private userService: UserService,) { }\n  isExists=false;\n  loading = false;\n  isLoad = \"hide\";\n  registerInfo={};\n  ngOnInit(): void {\n  }\n  ngAfterViewInit(){\n    // console.log(this.span)\n    // this.span?.nativeElement.classList.add('ng-untouched')\n    // console.log(this.emailDom.nativeElement)\n    // this.emailDom.nativeElement.classList.remove('ng-untouched')\n    // this.emailDom.nativeElement.classList.add('ng-touched')\n    // this.emailDom.nativeElement.setAttribute('aria-describedby',\"mat-error-0 mat-error-1\")\n  }\n  signupForm = new FormGroup({\n    email: new FormControl('',[Validators.required,validateEmail]),\n    password: new FormControl('',[Validators.required,validatePassword]),\n    confirmPassword: new FormControl('',[Validators.required,checkConfirmPassword]),\n    firstname: new FormControl('',[Validators.required,validateFullname]),\n    lastname: new FormControl('',[Validators.required,validateFullname]),\n  });\n  ngOnChanges(){\n  }\n  /************ */\n  goSignup(){\n    if(!this.signupForm.valid){\n      return;\n    }\n    \n    this.registerInfo = {\n      \"email\":this._form.email.value,\n      \"password\":this._form.password.value,\n      \"firstName\":this._form.firstname.value,\n      \"lastName\":this._form.lastname.value\n    }\n    console.log(this.registerInfo)\n    this.loading = true;\n    this.isLoad = \"\";\n    this.isExists=false;\n    this.userService.postRegister(this.registerInfo).subscribe(\n      (res:any)=>{\n        console.log(res)\n        this.loading = false;\n        this.isLoad=\"hide\"\n        if(res.success){\n        this.isExists=false;\n        this.router.navigate(['login']);  \n      }\n    },\n    (err) =>{\n      if(err.error.exists){\n        this.isExists=true;\n      }\n      this.isLoad = \"hide\";\n      this.loading = false;\n      console.log(err.error)\n    });\n  }\n  get _form(){return this.signupForm.controls;}\n}\nfunction validateEmail(c: FormControl) {\n  let EMAIL_REGEXP = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n\n  return EMAIL_REGEXP.test(c.value) ? null : {\n    emailNotValid: true\n  };\n}\nfunction validateFullname(c: FormControl){\n  return (c.value.length < 3)? {min:true}: null;\n}\n\nfunction validatePassword(c:FormControl){\n\n  let passReg = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/g;\n\n  return passReg.test(c.value) ? null : {\n    passwordWeak: true\n  };\n}\n\nfunction checkConfirmPassword(control:FormControl){\n  let form = control.parent;\n  let password = form?.controls['password'].value;\n  let confirmPassword = form?.controls['confirmPassword'].value;\n  if(password != confirmPassword){\n    return {notMatch:true};\n  }\n  return null;\n}","<mat-card class=\"signup-card\">\n  <!-- <mat-card-header >\n    <div mat-card-avatar class=\"example-header-image\">sadfsd</div>\n    <mat-card-title>Sign up</mat-card-title>\n  </mat-card-header> -->\n  <h2 class=\"cart-header\">Sign Up</h2>\n  <mat-card-content>\n    <p class=\"text-danger\" #aa *ngIf=\"isExists\">Email already exists</p>\n    <form class=\"signup-form\" [formGroup]=\"signupForm\">\n      <mat-form-field class=\"input-field\">\n        <mat-label>Email</mat-label>\n        <input matInput type=\"email\" #email placeholder=\"Ex. example@gmail.com\" formControlName=\"email\">\n        <mat-error *ngIf=\"this.signupForm.controls.email.errors && this.signupForm.controls.email.errors.required\">Email is required</mat-error>\n        <mat-error *ngIf=\"this.signupForm.controls.email.errors && !this.signupForm.controls.email.errors.required && this.signupForm.controls.email.errors.emailNotValid\">Email is invaild</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field class=\"input-field\">\n        <mat-label>First Name</mat-label>\n        <input matInput type=\"text\" placeholder=\"Ex. John Wick\" formControlName=\"firstname\">\n        <mat-error *ngIf=\"this.signupForm.controls.firstname.errors?.required\">First name is required</mat-error>\n        <mat-error *ngIf=\"!this.signupForm.controls.firstname.errors?.required && _form.firstname.errors?.min\">First name must be minimum 3 characters</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field class=\"input-field\">\n        <mat-label>Last Name</mat-label>\n        <input matInput type=\"text\" placeholder=\"Ex. John Wick\" formControlName=\"lastname\">\n        <mat-error *ngIf=\"this.signupForm.controls.lastname.errors?.required\">Last name is required</mat-error>\n        <mat-error *ngIf=\"!this.signupForm.controls.lastname.errors?.required && _form.lastname.errors?.min\">Last name must be minimum 3 characters</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field class=\"input-field\">\n        <mat-label>Password</mat-label>\n        <input matInput type=\"password\" placeholder=\"\" formControlName=\"password\">\n        <mat-error *ngIf=\"this.signupForm.controls.password.errors && this.signupForm.controls.password.errors.required\">Password is required</mat-error>\n        <mat-error *ngIf=\"this.signupForm.controls.password.errors && !this.signupForm.controls.password.errors.required && this.signupForm.controls.password.errors.passwordWeak\">Password is very weak</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field class=\"input-field\">\n        <mat-label>Confirm Password</mat-label>\n        <input matInput type=\"password\" placeholder=\"\" formControlName=\"confirmPassword\">\n        <mat-error *ngIf=\"_form?.confirmPassword.errors?.notMatch || _form?.confirmPassword.errors?.required\">confirm password must match password</mat-error>\n      </mat-form-field>\n      \n    </form>\n\n  </mat-card-content>\n  <div class=\"footer-buttons text-center\">\n    <button mat-raised-button color=\"primary\" (click)=\"goSignup()\" [disabled]=\"!this.signupForm.valid || loading\">\n      <span [class]=\"isLoad\">\n        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n      </span>\n      Sign up\n    </button>\n  </div>\n  <div class=\"options text-center mt-3\">\n    <a [routerLink]=\"['/login']\" >Already have account?</a>\n  </div>\n  <mat-card-actions>\n    <!-- <button mat-button (click)=\"goLogin()\">Go login</button> -->\n  </mat-card-actions>\n</mat-card>","import { Component, Output, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { TodoGroupService } from '../services/todo-group.service';\nimport { TodoService } from '../services/todo.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-dialog-edit-todo',\n  templateUrl: './dialog-edit-todo.component.html',\n  styleUrls: ['./dialog-edit-todo.component.css']\n})\nexport class DialogEditTodoComponent implements OnInit {\n\n  title = \"untitled\";\n  flag;\n  status;\n  body = \"\";\n  tags: Array<any> = [];\n  isTitle = false;\n  isTitleLong = false;\n\n  visible = true;\n  selectable = true;\n  removable = true;\n  addOnBlur = true;\n  _id = this.route.snapshot.paramMap.get(\"_id\") || \"\";\n  token = localStorage.getItem('todoitUserToken') || \"\";\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n  constructor(\n    public dialogRef: MatDialogRef<DialogEditTodoComponent>,\n    private todoService: TodoService,\n    private todoGroupService: TodoGroupService,\n    private route: ActivatedRoute,\n    private router: Router,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit(): void {\n    this._id = this.data._id;\n    this.title = this.data.title;\n    this.body = this.data.body;\n    this.tags = this.data.tags;\n    this.status = this.data.status\n    this.flag = this.data.flag\n    console.log(this._id)\n  }\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n    // Add our fruit\n    if ((value || '').trim()) {\n      this.tags.push({ name: value.trim() });\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n  remove(tag): void {\n    const index = this.tags.indexOf(tag);\n\n    if (index >= 0) {\n      this.tags.splice(index, 1);\n    }\n  }\n  updateItem(flag) {\n    let title = this.title,\n      body = this.body,\n      tags = this.tags,\n      _id = this._id,\n      status = this.status;\n    console.log(flag)\n    var currentUrl = \"\";\n    if (flag == 1) {\n      this.todoService.patchTodo(_id, { title, body, tags, _id, status }).subscribe(\n        (res: any) => {\n          console.log(res);\n          currentUrl = `/dashboard/todo/${this._id}`;\n          this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\n            this.router.navigate([currentUrl]);\n          });\n          console.log(currentUrl)\n          this.close()\n        },\n        err => {\n          currentUrl = `/dashboard`\n          this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\n            this.router.navigate([currentUrl]);\n          });\n          console.log(currentUrl)\n          console.log(err)\n        }\n      )\n    } else {\n      this.todoGroupService.patchTodoGroup(_id, { title, body, tags, _id, status }).subscribe(\n        (res: any) => {\n          console.log(res);\n          currentUrl = `/dashboard/todo-group/${this._id}`\n          this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\n            this.router.navigate([currentUrl]);\n          });\n          console.log(currentUrl)\n          this.close()\n        },\n        err => {\n          currentUrl = `/dashboard`\n          this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\n            this.router.navigate([currentUrl]);\n          });\n          console.log(currentUrl)\n          console.log(err)\n        }\n      )\n    }\n    console.log(currentUrl)\n\n  }\n  close() {\n    this.dialogRef.close();\n    this.title = \"untitled\";\n    this.body = \"\";\n    this.tags = [\n      { name: 'Lemon' },\n      { name: 'Lime' },\n      { name: 'Apple' },\n    ];\n    this.isTitle = false;\n    this.isTitleLong = false;\n  }\n\n}\n","<mat-dialog-content class=\"mat-typography\">\n    <h1>Add a todo to group</h1>\n    <br>\n    <br>\n    <div class=\"errors text-danger\">\n        <span class=\"title d-block\" *ngIf=\"isTitle\">Choose a title</span>\n        <span class=\"title d-block\" *ngIf=\"isTitleLong\">Title must be maximum 20 character</span>\n    </div>\n\n    <mat-form-field class=\"example-full-width\">\n        <mat-label></mat-label>\n        <input matInput placeholder=\"Enter group title\" [(ngModel)]=\"title\">\n        <button mat-button *ngIf=\"title\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"title=''\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"example-full-width\">\n        <mat-label>Message</mat-label>\n        <input matInput #message maxlength=\"256\" [(ngModel)]=\"body\" placeholder=\"Ex. I need help with...\">\n        <!-- <mat-hint align=\"start\"><strong>Don't disclose personal info</strong> </mat-hint> -->\n        <mat-hint align=\"end\">{{message.value.length}} / 500</mat-hint>\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"example-chip-list\">\n        <mat-label>Tags</mat-label>\n        <mat-chip-list #chipList aria-label=\"Tags selection\">\n            <mat-chip *ngFor=\"let tag of tags\" [selectable]=\"selectable\" [removable]=\"removable\"\n                (removed)=\"remove(tag)\">\n                {{tag.name}}\n                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n            </mat-chip>\n            <input placeholder=\"New tag ..\" [matChipInputFor]=\"chipList\"\n                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\"\n                (matChipInputTokenEnd)=\"add($event)\">\n        </mat-chip-list>\n    </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions align=\"center\">\n    <div class=\"buttons justify-content-center align-items-center\">\n        <button mat-raised-button color=\"primary\" (click)=\"updateItem(flag)\">Change</button>\n        <button mat-raised-button (click)=\"close()\">Cancel</button>\n    </div>\n</mat-dialog-actions>","import { Injectable } from '@angular/core';\nimport {UserService} from './user.service'\n@Injectable({providedIn: \"root\"})\nexport class AuthService {\n  constructor(\n    public userService:UserService\n  ) {}\n  // ...\n  public isAuthenticated(): boolean {\n    let isAuthenticated = false;\n    this.userService.getProfile(localStorage.getItem('todoitUserToken')).subscribe(\n      (res:any)=>{\n        console.log(res.user)\n        if(res.user){\n          isAuthenticated = true;\n        }\n      },\n      (err)=>{\n        console.log(err);\n        isAuthenticated = false;\n      }\n    )\n    // const token = localStorage.getItem('todoitUserToken');\n    // Check whether the token is expired and return\n    // true or false\n    return !isAuthenticated;\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TodoGroupService } from '../services/todo-group.service';\nimport {FormGroup, FormControl} from '@angular/forms';\n@Component({\n  selector: 'app-group-table',\n  templateUrl: './group-table.component.html',\n  styleUrls: ['./group-table.component.css']\n})\nexport class GroupTableComponent implements OnInit {\n  public groups=[];\n  solos=[];\n  public allTodoGroups=[];\n\n  constructor(\n    private todoGroupService:TodoGroupService,\n    private router:Router,\n    private route: ActivatedRoute\n  ) { }\n  range = new FormGroup({\n    start: new FormControl('2021-03-15T22:00:00.000Z'),\n    end: new FormControl('2021-03-16T22:00:00.000Z')\n  });\n  groupsLimit=30;\n  groupsSkip=0;\n  isLoading = true;\n  isError = false;\n  \n  subscriberTodoGroups;\n  subscriberTodos;\n\n  ngOnInit(): void {\n    /// Fetch all solo todos\n    this.isError = false;\n    this.isLoading = true;\n    this.subscriberTodoGroups = this.todoGroupService.getTodoGroups(this.groupsLimit,this.groupsSkip)\n    this.subscriberTodoGroups.subscribe(\n      (res:any)=>{\n        // console.log(res)\n        this.isLoading = false;\n        this.isError = false;\n        this.groups = res.todoGroups;\n        this.allTodoGroups = res.todoGroups;\n      },\n      err=>{\n        this.isLoading = false;\n        this.isError = true;\n        console.log(err)\n      }\n    )\n    // Fetch all group todos\n  }\n  changeStatus(id){\n    let group = this.groups.find(group=>group?._id==id);\n    console.log(id,group._id);\n    group.status = (group.status == \"in progress\")? \"done\":\"in progress\";\n    let {title, body, tags, _id,status}= group\n    this.todoGroupService.patchTodoGroup(id,{title, body, tags, _id,status}).subscribe(\n      (res:any)=>{\n        console.log(res);\n      },\n      err=>{\n        console.log(err)\n      }\n    )\n  }\n  getDate(e){\n    let dStart = new Date(this.range.value.start)\n    let dEnd = new Date(this.range.value.end);\n    if(dEnd.getTime() == 0){\n      this.groups = this.allTodoGroups;\n      return;\n    }\n    let todoGroup = this.allTodoGroups.filter(todo=>{\n      var todoCreateAt = new Date(todo.createdAt); // 10:09 to\n      console.log(todoCreateAt.getTime())\n      console.log(dStart.getTime())\n      console.log(dEnd.getTime())\n      console.log(((todoCreateAt.getTime() >= dStart.getTime()) && (todoCreateAt.getTime() <= dEnd.getTime())))\n\n      return ((todoCreateAt.getTime() >= dStart.getTime()) && (todoCreateAt.getTime() <= dEnd.getTime())); \n    })\n    this.groups = todoGroup;\n  }\n  toGroupInfo(id){\n    this.router.navigate([`dashboard/todo-group/${id}`]);\n  }\n  toTodoInfo(id){\n    this.router.navigate(['dashboard/table-todo'])\n  }\n  deleteTodo(id){\n    console.log(id)\n    \n    this.todoGroupService.postDeleteTodoGroup(id).subscribe(\n      (res:any)=>{\n        console.log(res)\n        let newGroup = this.groups.filter(group=>group._id!=id);\n        this.groups = newGroup;\n      },\n      (err)=>{\n        console.log(err)\n      }\n    )\n  }\n}\n","<h2>Groups</h2>\n<div>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Enter a date range</mat-label>\n    <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n      <input matStartDate (dateInput)=\"getDate($event)\" formControlName=\"start\" placeholder=\"Start date\">\n      <input matEndDate (dateInput)=\"getDate($event)\"  formControlName=\"end\" placeholder=\"End date\">\n    </mat-date-range-input>\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    <mat-date-range-picker  #picker></mat-date-range-picker>\n  \n    <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\">Invalid start date</mat-error>\n    <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\">Invalid end date</mat-error>\n  </mat-form-field>\n</div>\n<div *ngIf=\"!isLoading && !isError\">\n  <div class=\"table\" *ngIf=\"groups.length > 0\">\n    <table class=\"table table-hover \">\n      <thead>\n        <tr>\n          <th scope=\"col\">No.</th>\n          <th scope=\"col\">Title</th>\n          <th scope=\"col\">status</th>\n          <th scope=\"col\">Options</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let group of groups; let i = index\" class=\"clickable\">\n          <th scope=\"row\">{{i+1}}</th>\n          <td (click)=\"changeStatus(group._id)\" class=\"clickable title\" *ngIf=\"group.status=='in progress'\">{{group.title}}</td>\n          <td (click)=\"changeStatus(group._id)\" class=\"clickable title\" *ngIf=\"group.status=='done'\" class=\"marked\">{{group.title}}</td>\n          <td *ngIf=\"group.status=='in progress'\"><mat-icon>cached</mat-icon></td>\n          <td *ngIf=\"group.status=='done'\"><mat-icon>done</mat-icon></td>\n          <td class=\"d-flex\">\n            <button class=\"mr-1\" mat-mini-fab color=\"primary\" (click)=\"toGroupInfo(group._id)\" aria-label=\"Example icon button with a filter list icon\">\n              <mat-icon>open_in_new</mat-icon>\n            </button>\n            \n            <button mat-mini-fab color=\"warn\" (click)=\"deleteTodo(group._id)\" aria-label=\"Example icon button with a filter list icon\">\n              <mat-icon>delete</mat-icon>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <div *ngIf=\"groups.length == 0\">\n    <h2>No todo groups found</h2>\n  </div>\n</div>\n<div *ngIf=\"isLoading && !isError\" class=\"d-flex justify-content-center align-items-center\">\n  <div class=\"spinner-grow text-light\" role=\"status\">\n    <span class=\"sr-only\">Loading...</span>\n  </div>\n</div>\n<div class=\"errors\" *ngIf=\"isError\">\n  <h3>Unable to get groups</h3>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor(\n    private route:ActivatedRoute,\n    private router:Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text-center\">\n    <h1 style=\"color:black\">\n        404: Page is not found :'(\n    </h1>\n    <a mat-stroked-button [routerLink]=\"['/dashboard']\" >\n        <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\">home</mat-icon>\n        Back to dashboard\n    </a>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-default',\n  templateUrl: './default.component.html',\n  styleUrls: ['./default.component.css']\n})\nexport class DefaultComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>\n    Choose a Group / Solo\n</h1>","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  baseURL = \"https://todoit-app-api.herokuapp.com/api\"\n  constructor(private http: HttpClient) { }\n  postRegister(registerInfo):Observable<{}>{\n    \n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n      })\n    };\n    return this.http.post(`${this.baseURL}/users/register`,registerInfo,httpOptions);\n  }\n  postLogin(userCredentials){\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n      })\n    };\n    return this.http.post(`${this.baseURL}/users/login`,userCredentials,httpOptions);\n\n  }\n  getProfile(token){\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization':token\n      })\n    };\n    return this.http.get(`${this.baseURL}/users/profile`,httpOptions)\n  }\n  postUpdate(){\n  }\n  postUpdatePass(){\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n  baseURL = \"https://todoit-app-api.herokuapp.com/api\";\n  constructor(\n    private http:HttpClient\n  ) { }\n  token = localStorage.getItem('todoitUserToken')\n  getTodos(limit,skip){\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization':this.token\n      })\n    };\n    return this.http.get(`${this.baseURL}/todos/?limit=${limit}&skip=${skip}`,httpOptions)\n  }\n  getTodoByID(id){\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization':this.token\n      })\n    };\n    return this.http.get(`${this.baseURL}/todos/${id}`,httpOptions);\n  }\n  postNewTodo(body){\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization':this.token\n      })\n    };\n    return this.http.post(`${this.baseURL}/todos`,body,httpOptions)\n  }\n  patchTodo(id,updates){\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization':this.token\n      })\n    };\n    return this.http.patch(`${this.baseURL}/todos/${id}`,updates,httpOptions)\n  }\n  deleteTodo(id){\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization':this.token\n      })\n    };\n    return this.http.delete(`${this.baseURL}/todos/${id}`,httpOptions)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes,CanActivate } from '@angular/router';\nimport {SignUpComponent} from './sign-up/sign-up.component'\nimport {LoginComponent} from './login/login.component'\nimport {DashboardComponent} from './dashboard/dashboard.component'\nimport {TodoGroupComponent} from './todo-group/todo-group.component'\nimport {TodoComponent} from './todo/todo.component';\nimport {ProfileComponent} from './profile/profile.component';\nimport {NotFoundComponent} from './not-found/not-found.component'\nimport { DefaultComponent } from './default/default.component';\nimport { TodoTableComponent } from './todo-table/todo-table.component';\nimport { GroupTableComponent } from './group-table/group-table.component';\nimport { \n  AuthGuardService as AuthGuard \n} from './services/auth-guard.service';\nconst routes: Routes = [\n  {path: '', redirectTo: 'login', pathMatch: 'full'},\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignUpComponent },\n  { path: 'profile', component: ProfileComponent,canActivate: [AuthGuard] },\n  { path: 'failed', component: NotFoundComponent },\n  // { path: 'dashboard', component: DashboardComponent },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {path:'default',component:DefaultComponent,canActivate: [AuthGuard]},\n      // {path: '', redirectTo: 'todo-groups'},\n      {path: 'todo-group',  redirectTo:'default',pathMatch: 'full'},\n      {path: 'todo-group/:_id',pathMatch: 'full', component: TodoGroupComponent},\n      {path: 'todo/:_id',pathMatch: 'full', component: TodoComponent},\n      {path:'table-groups',pathMatch: 'full',component:GroupTableComponent},\n      {path:'table-todo',pathMatch: 'full',component:TodoTableComponent},\n    ]\n  },\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl,FormGroup, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { UserService } from '../services/user.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit,AfterViewInit {\n  isLoad = \"hide\";\n  loading = false;\n  credentialsError=\"hide\";\n  userCredentials={};\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder,\n    private userService: UserService,) { \n      // this.userService.getProfile(localStorage.getItem('todoitUserToken')).subscribe(\n      //   (res:any)=>{\n      //     console.log(res)\n      //     if(res.success){\n      //       this.router.navigate(['dashboard']);\n      //     }\n      //   },\n      //   err=>{\n      //     console.log(err)\n      //   }\n      // )\n    }\n  ngOnInit(): void {\n  }\n  ngAfterViewInit(){\n    \n  }\n  loginForm = new FormGroup({\n    email: new FormControl('',[Validators.required,validateEmail]),\n    password: new FormControl('',[Validators.required]),\n  });\n  get _form(){return this.loginForm.controls;}\n\n  /************ */\n  goLogin(){\n    this.userCredentials = {\n      \"email\":this._form.email.value,\n      \"password\":this._form.password.value,\n    }\n    this.isLoad=\"\"\n    this.loading = true;\n    this.userService.postLogin(this.userCredentials).subscribe(\n      (res:any)=>{\n        console.log(res)\n        this.loading = false;\n        this.isLoad=\"hide\"\n        if(res.success){\n          localStorage.setItem('todoitUserToken',res.token);\n          localStorage.getItem('todoitUserToken');\n          this.router.navigate(['dashboard']);\n        }\n      },\n      (err) =>{\n        if(err.error.exists){\n        }\n        this.loading = false;\n        this.isLoad = \"hide\";\n        this.credentialsError=\"\";\n        this.loginForm.controls['password'].setValue(\"\");\n        console.log(err.error)\n      });\n  }\n}\nfunction validateEmail(c: FormControl) {\n  let EMAIL_REGEXP = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n\n  return EMAIL_REGEXP.test(c.value) ? null : {\n    emailNotValid: true\n  };\n}\n","<mat-card class=\"login-card\">\n  <!-- <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>Login</mat-card-title>\n  </mat-card-header> -->\n  <h2 class=\"cart-header\">Login</h2>\n  <mat-card-content>\n    <form class=\"login-form\" [formGroup]=\"loginForm\">\n      <div class=\"errors\">\n        <span [class]=\"credentialsError\">Email or password not correct</span>\n      </div>\n      <br>\n      <mat-form-field class=\"input-field\">\n        <mat-label>Email</mat-label>\n        <input matInput type=\"email\" #email placeholder=\"Ex. example@gmail.com\" formControlName=\"email\">\n        <mat-error *ngIf=\"_form.email.errors && _form.email.errors.required\">Email is required</mat-error>\n        <mat-error *ngIf=\"_form.email.errors && !_form.email.errors.required && _form.email.errors.emailNotValid\">Email\n          is invaild</mat-error>\n      </mat-form-field>\n      <br>\n      <mat-form-field class=\"input-field\">\n        <mat-label>Password</mat-label>\n        <input matInput type=\"password\" placeholder=\"\" formControlName=\"password\">\n        <mat-error *ngIf=\"_form.password.errors && _form.password.errors.required\">Password is required</mat-error>\n        <mat-error\n          *ngIf=\"_form.password.errors && !_form.password.errors.required && _form.password.errors.passwordWeak\">\n          Password is very weak</mat-error>\n      </mat-form-field>\n    </form>\n  </mat-card-content>\n  <div class=\"footer-buttons text-center\">\n    <button mat-raised-button color=\"primary\" (click)=\"goLogin()\" [disabled]=\"!this.loginForm.valid || loading\">\n      <span [class]=\"isLoad\">\n        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n      </span>\n      Login\n    </button>\n  </div>\n  <div class=\"options text-center mt-3\">\n    <a [routerLink]=\"['/signup']\">Don't have account?</a>\n  </div>\n  <mat-card-actions>\n    <!-- <button mat-button (click)=\"goDashboard()\">Go login</button> -->\n  </mat-card-actions>\n</mat-card>","import { Component, DoCheck, OnChanges, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { TodoGroupService } from '../services/todo-group.service';\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport { MatDialog } from '@angular/material/dialog';\nimport {DialogAddTodoComponent} from '../dialog-add-todo/dialog-add-todo.component'\nimport {TodoService} from '../services/todo.service'\nimport { DialogEditTodoComponent } from '../dialog-edit-todo/dialog-edit-todo.component';\n// import {HttpParams} from '@angular/common/http'\n@Component({\n  selector: 'app-todo-group',\n  templateUrl: './todo-group.component.html',\n  styleUrls: ['./todo-group.component.css']\n})\nexport class TodoGroupComponent implements OnInit,OnChanges,DoCheck {\n  isLoading=true;\n  isError=false;\n  todos=[];\n  allTodo=[];\n  _id = this.route.snapshot.paramMap.get(\"_id\") || \"\";\n  token = localStorage.getItem('todoitUserToken') || \"\";\n  todoGroup={\n    title:\"\",\n    body:\"\",\n    tags:[],\n    todos:[],\n    status:\"\"\n  };\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private todoGroupService: TodoGroupService,\n    private dialog: MatDialog,\n    private todoService: TodoService\n  ) {\n\n    this.getGroup()\n   }\n  ngDoCheck(){\n    if(this._id == this.route.snapshot.paramMap.get('_id')){\n      return;\n    }\n    this._id = this.route.snapshot.paramMap.get('_id') || \"\";\n    this.getGroup()\n  }\n  ngOnInit(): void {\n  }\n  ngOnChanges(){\n  }\n  getGroup(){\n    this.isLoading = true;\n    this.isError=false;\n\n    this.todoGroupService.getTodoGroup(this._id).subscribe(\n      (res:any)=>{\n        console.log(res)\n        this.todoGroup = res.todoGroup;\n        this.todos = res.todos;\n        this.allTodo = res.todos;\n        console.log(this.todos)\n        this.isLoading = false;\n        if(!this.todoGroup){\n          this.isError=true\n        }\n      },\n      err=>{\n        console.log(err)\n        this.isError=true;\n        this.isLoading = false;\n      }\n    )\n  }\n\n  applyFilter(event){\n    if(event.target.value==\"\"){\n      this.todos = this.allTodo\n      return\n    }\n    this.todos = this.allTodo.filter((todo)=>{\n      console.log(\"todo: \",todo.title,\"event: \",event.target.value)\n      return todo.title.toLowerCase().includes(event.target.value.toLowerCase());\n    })\n  }\n  gotoTodo(_id){\n    console.log(_id)\n    this.router.navigate(['dashboard/todo',_id])\n  }\n  drop(event: CdkDragDrop<[]>) {\n    moveItemInArray(this.todoGroup.tags, event.previousIndex, event.currentIndex);\n  }\n  openDialog(id){\n    this.dialog.open(DialogAddTodoComponent,{\n      data: {\n        todoGroupId: id,\n      }\n    });\n  }\n  openEditDialog(id){\n    this.dialog.open(DialogEditTodoComponent,{\n      data: {\n        _id: id,\n        title:this.todoGroup.title,\n        body:this.todoGroup.body,\n        tags:this.todoGroup.tags,\n        status:this.todoGroup.status,\n        flag:2\n      }\n    });\n  }\n  changeStatus(id){\n    let todo = this.todos.find(todo=>todo?._id==id);\n    console.log(id,todo._id);\n    todo.status = (todo.status == \"in progress\")? \"done\":\"in progress\";\n    let {title, body, tags, _id,status}= todo\n    this.todoService.patchTodo(id,{title, body, tags, _id,status}).subscribe(\n      (res:any)=>{\n        console.log(res);\n      },\n      err=>{\n        console.log(err)\n      }\n    )\n  }\n  toTodoInfo(id){\n    this.router.navigate([`dashboard/todo/${id}`]);\n  }\n  deleteTodo(id){\n    console.log(id)\n    \n    this.todoService.deleteTodo(id).subscribe(\n      (res:any)=>{\n        console.log(res)\n        let newTodo = this.todos.filter(todo=>todo._id!=id);\n        this.allTodo = newTodo;\n      },\n      (err)=>{\n        console.log(err)\n      }\n    )\n  }\n}\n","<div>\n   <a mat-stroked-button [routerLink]=\"['/dashboard/default']\">Back</a>\n</div>\n<hr>\n<div *ngIf=\"!isLoading && !isError\" style=\"position: relative;\">\n   <p><b>Title:</b></p>\n   <div style=\"position:absolute;right: 0; top:0; z-index: 2;\">\n      <button mat-mini-fab color=\"primary\" (click)=\"openEditDialog(_id)\"\n         aria-label=\"Example icon button with a filter list icon\">\n         <mat-icon>create</mat-icon>\n      </button>\n   </div>\n   <h2>{{todoGroup.title}}</h2>\n   <hr>\n   <p><b>Body:</b></p>\n   <p>{{todoGroup.body}}</p>\n   <hr>\n   <span class=\"d-block\"><b>Tags:</b></span><br>\n   <div class=\"tags\">\n      <mat-chip-list class=\"example-chip\" cdkDropList cdkDropListOrientation=\"horizontal\"\n         (cdkDropListDropped)=\"drop($event)\">\n         <mat-chip class=\"example-box\" cdkDrag *ngFor=\"let tag of todoGroup.tags\">\n            {{tag.name}}\n         </mat-chip>\n      </mat-chip-list>\n   </div>\n   <hr>\n   <div><button mat-stroked-button (click)=\"openDialog(_id)\" color=\"primary\">+ Add todo to group</button></div>\n   <br>\n   <span class=\"d-block\"><b>Todos</b></span>\n   <br>\n   <mat-form-field>\n      <mat-label>Filter by title</mat-label>\n      <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\" #input>\n   </mat-form-field>\n   <div class=\"empty text-center\" *ngIf=\"todos.length == 0\">\n      Empty<br>No todos found\n   </div>\n   <div class=\"table-responsive\" *ngIf=\"todos.length > 0\">\n      <table class=\"table table-hover \">\n         <thead>\n            <tr>\n               <th scope=\"col\">No.</th>\n               <th scope=\"col\">Title</th>\n               <th scope=\"col\">Status</th>\n               <th scope=\"col\">Options</th>\n            </tr>\n         </thead>\n         <tbody>\n            <tr *ngFor=\"let todo of todos; let i = index\" class=\"clickable\">\n               <th scope=\"row\">{{i+1}}</th>\n               <td (click)=\"changeStatus(todo._id)\" class=\"clickable title\" *ngIf=\"todo.status=='in progress'\">\n                  {{todo.title}}</td>\n               <td (click)=\"changeStatus(todo._id)\" class=\"clickable title\" *ngIf=\"todo.status=='done'\" class=\"marked\">\n                  {{todo.title}}</td>\n               <td *ngIf=\"todo.status=='in progress'\">\n                  <mat-icon>cached</mat-icon>\n               </td>\n               <td *ngIf=\"todo.status=='done'\">\n                  <mat-icon>done</mat-icon>\n               </td>\n               <td class=\"d-flex\">\n                  <button class=\"mr-1\" mat-mini-fab color=\"primary\" (click)=\"toTodoInfo(todo._id)\"\n                     aria-label=\"Example icon button with a filter list icon\">\n                     <mat-icon>open_in_new</mat-icon>\n                  </button>\n\n                  <button mat-mini-fab color=\"warn\" (click)=\"deleteTodo(todo._id)\"\n                     aria-label=\"Example icon button with a filter list icon\">\n                     <mat-icon>delete</mat-icon>\n                  </button>\n               </td>\n            </tr>\n         </tbody>\n      </table>\n   </div>\n</div>\n<div *ngIf=\"isLoading && !isError\" class=\"d-flex justify-content-center align-items-center\">\n   <div class=\"spinner-border\" style=\"width: 3rem; height: 3rem;\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n   </div>\n</div>\n<div *ngIf=\"!isLoading && isError\">\n   <div class=\"text-center\">\n\n      <img src=\"../../assets/images/not-found.jpg\" alt=\"\" class=\"img-fluid\">\n      <h2>\n         Unable to get todo group :'(\n      </h2>\n   </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoGroupService {\n  baseURL = \"https://todoit-app-api.herokuapp.com/api\";\n  constructor(\n    private http:HttpClient,\n  ) { }\n  token = localStorage.getItem('todoitUserToken');\n  postNewTodoGroup(body){\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization':this.token\n      })\n    };\n    return this.http.post(`${this.baseURL}/todoGroups/todogroup`,body,httpOptions)\n  }\n  getTodoGroups(limit,skip){\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization':this.token\n      })\n    };\n    return this.http.get(`${this.baseURL}/todoGroups/?limit=${limit}&skip=${skip}`,httpOptions)\n  }\n  postDeleteTodoGroup(todoGroupID){\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization':this.token\n      })\n    };\n    return this.http.delete(`${this.baseURL}/todoGroups/todogroup/${todoGroupID}`,httpOptions)\n  }\n  getTodoGroup(todoGroupID){\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization':this.token\n      })\n    };\n    return this.http.get(`${this.baseURL}/todoGroups/todogroup/${todoGroupID}`,httpOptions)\n  }\n  patchTodoGroup(todoGroupID,updates){\n    /**\n     * {\n        \"title\":\"new title\", \n        \"body\":\"asdfasd\", \n        \"tags\":[\"sdfsdf\"],\n        \"status\":\"done\"\n        }\n     */\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization':this.token\n      })\n    };\n    return this.http.patch(`${this.baseURL}/todoGroups/todogroup/${todoGroupID}`,updates,httpOptions)\n  }\n  postNewTodo(body){\n    /**BODY :\n     * \"todoGroupId\":\"60387388ba5fb126b836c19f\", \n      \"title\":\"This is a title sdf\", \n      \"body\": \"This is a body\", \n      \"tags\" : [\"tag 1\", \"tag 2\"]\n     */\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization':this.token\n      })\n    };\n    return this.http.post(`${this.baseURL}/todoGroups/new/todo`,body,httpOptions)\n  }\n  postExistingTodo(body){\n    /**\n     * BODY :\n      {\n          \"todoGroupId\":\"60387388ba5fb126b836c19f\"\n      }\n    */\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization':this.token\n      })\n    };\n    return this.http.post(`${this.baseURL}/todoGroups/new/todo`,body,httpOptions)\n  }\n}\n"],"sourceRoot":"webpack:///"}